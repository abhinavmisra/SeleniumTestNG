<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="0" ignored="0" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="269" started-at="2017-12-17T17:05:37Z" finished-at="2017-12-17T17:05:37Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="269" started-at="2017-12-17T17:05:37Z" finished-at="2017-12-17T17:05:37Z">
      <class name="com.scenario.messages.Scenario1">
        <test-method status="FAIL" signature="beforeTest()[pri:0, instance:com.scenario.messages.Scenario1@59e84876]" name="beforeTest" is-config="true" duration-ms="0" started-at="2017-12-17T22:35:37Z" finished-at="2017-12-17T22:35:37Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver executable does not exist: C:\Program Files\geckodriver-v0.11.1-win64\geckodriver.exe]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver executable does not exist: C:\Program Files\geckodriver-v0.11.1-win64\geckodriver.exe
	at com.google.common.base.Preconditions.checkState(Preconditions.java:518)
	at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:123)
	at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:118)
	at org.openqa.selenium.firefox.GeckoDriverService.access$100(GeckoDriverService.java:38)
	at org.openqa.selenium.firefox.GeckoDriverService$Builder.findDefaultExecutable(GeckoDriverService.java:112)
	at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:302)
	at org.openqa.selenium.firefox.FirefoxDriver.createCommandExecutor(FirefoxDriver.java:312)
	at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:272)
	at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:267)
	at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:263)
	at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:122)
	at com.library.function.DriverClass.setupScenario(DriverClass.java:34)
	at com.scenario.messages.Scenario1.beforeTest(Scenario1.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:515)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:217)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:144)
	at org.testng.TestRunner.beforeRun(TestRunner.java:634)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="SKIP" signature="testEasy()[pri:0, instance:com.scenario.messages.Scenario1@59e84876]" name="testEasy" duration-ms="1" started-at="2017-12-17T22:35:37Z" finished-at="2017-12-17T22:35:37Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver executable does not exist: C:\Program Files\geckodriver-v0.11.1-win64\geckodriver.exe]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver executable does not exist: C:\Program Files\geckodriver-v0.11.1-win64\geckodriver.exe
	at com.google.common.base.Preconditions.checkState(Preconditions.java:518)
	at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:123)
	at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:118)
	at org.openqa.selenium.firefox.GeckoDriverService.access$100(GeckoDriverService.java:38)
	at org.openqa.selenium.firefox.GeckoDriverService$Builder.findDefaultExecutable(GeckoDriverService.java:112)
	at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:302)
	at org.openqa.selenium.firefox.FirefoxDriver.createCommandExecutor(FirefoxDriver.java:312)
	at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:272)
	at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:267)
	at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:263)
	at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:122)
	at com.library.function.DriverClass.setupScenario(DriverClass.java:34)
	at com.scenario.messages.Scenario1.beforeTest(Scenario1.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:515)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:217)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:144)
	at org.testng.TestRunner.beforeRun(TestRunner.java:634)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEasy -->
        <test-method status="SKIP" signature="afterTest()[pri:0, instance:com.scenario.messages.Scenario1@59e84876]" name="afterTest" is-config="true" duration-ms="0" started-at="2017-12-17T22:35:37Z" finished-at="2017-12-17T22:35:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- com.scenario.messages.Scenario1 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
